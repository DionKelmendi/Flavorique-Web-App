@using Microsoft.AspNetCore.Identity
@inject UserManager<ApplicationUser> UserManager
@model PaginatedList<Comment>
@{
    ViewData["Title"] = "Index";
    string sortValue = Context.Request.Query["sortOrder"].ToString();
    var prevDisabled = Model.PageIndex == 1 ? "disabled" : "";
    var nextDisabled = Model.PageIndex == Model.TotalPages ? "disabled" : "";
}

<div class="container p-3">
    <div class="row pt-4">
        <div class="col-6">
            <h2 class="text-primary"> Comment List </h2>
        </div>
    </div>
</div>

<form asp-action="Index" method="get">
    <div class="form-actions d-flex align-items-baseline justify-content-between">
        <p>
            Find by name: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-primary" />

            <div class="btn-group">
                <a class="btn btn-secondary" class="dropdown-item" asp-action="Index" asp-route-sortOrder="@ViewData["CurrentSort"]" asp-route-searchString="@ViewData["CurrentFilter"]" asp-route-userFilter="" asp-route-emailFilter="" style="color: white; text-decoration: none;">
                    @((string.IsNullOrEmpty(ViewData["UserFilterParm"]?.ToString()) ? "Select User" : ViewData["UserFilterParm"]))
                </a>
                <button type="button" class="btn btn-secondary dropdown-toggle dropdown-toggle-split" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                </button>
                <div class="dropdown-menu">

                    @foreach (var obj in UserManager.Users.ToList())
                    {
                        <a class="dropdown-item" asp-action="Index" asp-route-sortOrder="@ViewData["CurrentSort"]" asp-route-searchString="@ViewData["CurrentFilter"]" asp-route-userFilter="@obj.UserName.ToLower()" asp-route-emailFilter="" style="color: black; text-decoration: none;">
                            @obj.UserName
                        </a>
                        <div class="dropdown-divider"></div>
                    }
                </div>
            </div>
        </p>
        <a asp-action="Index">Back to Full List</a>

    </div>
</form>

<table class="table table-bordered w-100">
    <thead>
        <tr class="table-primary">
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["IdSortParm"]" asp-route-searchString="@ViewData["CurrentFilter"]">Id</a>
            </th>
            <th>
                User
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["BodySortParm"]" asp-route-searchString="@ViewData["CurrentFilter"]">Comment Body</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["RateSortParm"]" asp-route-searchString="@ViewData["CurrentFilter"]">Rating</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]" asp-route-searchString="@ViewData["CurrentFilter"]">Date Created</a>
            </th>
            <th colspan="2"></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var obj in Model)
        {
            <tr>
                <td>@obj.Id</td>
                <td>
                    @UserManager.FindByIdAsync(obj.AuthorId).Result.UserName
                </td>
                <td style="width: 450px">@obj.Body</td>
                <td style="min-width: 100px; text-align: center;">
                    @{
                        double fullStars = obj.Rating;

                        List<string> starArray = new List<string>();

                        for (int i = 1; i <= 5; i++)
                        {
                            if (i <= fullStars)
                            {
                                starArray.Add($"<i key={i} class=\"bi bi-star-fill text-warning\"></i>");
                            }
                            else
                            {
                                starArray.Add($"<i key={i} class=\"bi bi-star text-warning\"></i>");
                            }
                        }

                    }
                    @foreach (var star in starArray)
                    {
                        @Html.Raw(star)
                    }
                </td>
                <td>@obj.CreatedDateTime</td>
                <td class="d-flex justify-content-evenly">
                    <a asp-controller="Recipe" asp-action="Details" asp-route-id="@obj.RecipeId" class="btn btn-info"> Go to Recipe </a>
                    <button type="button" onclick="addModalInfo" class="btn btn-danger modalButton" data-bs-toggle="modal" data-bs-target="#deleteModal">
                        <i class="bi bi-trash"></i> &nbsp; Delete Comment
                    </button>
                </td>
            </tr>
        }
    </tbody>
</table>

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-searchString="@ViewData["CurrentFilter"]"
   class="btn btn-light @prevDisabled">
    Previous
</a>

@for (int i = 1; i <= Model.TotalPages; i++)
{
    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@i"
       asp-route-searchString="@ViewData["CurrentFilter"]"
       class="btn @(Model.PageIndex == i ? "btn-primary" : "btn-light")">
        @i
    </a>
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-searchString="@ViewData["CurrentFilter"]"
   class="btn btn-light @nextDisabled">
    Next
</a>

<script>
    document.addEventListener("click", function (e) {

        const target = e.target;
        if (target.classList.contains("modalButton")) {
            let targetRow = target.parentElement.parentElement.cells;
            let cellData = [targetRow[0].innerText, targetRow[1].innerText, targetRow[2].innerText];

            console.log(cellData);

            let form = document.getElementById("modalForm");
            form[0].value = cellData[1];
            form[1].value = cellData[2];

            let deleteButton = document.querySelector(".confirmDelete");
            deleteButton.href = "Comment/Delete/" + cellData[0];

            console.log(deleteButton.href);
        }
    })

</script>

<!-- Modal -->
@{
    <partial name="_DeletePartial" />
}

@section Scripts{
    @{
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta3/dist/js/bootstrap.min.js" integrity="sha384-j0CNLUeiqtyaRmlzUHCPZ+Gy5fQu0dQ6eZ/xAww941Ai1SxSY+0EQqNXNE6DZiVc" crossorigin="anonymous"></script>
    }
}