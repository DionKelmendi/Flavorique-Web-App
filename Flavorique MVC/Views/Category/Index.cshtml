@model PaginatedList<Category>
@{
    ViewData["Title"] = "Index";
    string sortValue = Context.Request.Query["sortOrder"].ToString();
    var prevDisabled = Model.PageIndex == 1 ? "disabled" : "";
    var nextDisabled = Model.PageIndex == Model.TotalPages ? "disabled" : "";
}

<h1>Categories</h1>

<div class="container p-3">
    <div class="row pt-4">
        <div class="col-6">
            <h2 class="text-primary"> Category List </h2>
        </div>
        <div class="col-6 text-end" style="padding:0;">
            <a asp-controller="Category" asp-action="Create" class="btn btn-primary"><i class="bi bi-plus-circle"></i> &nbsp; Create New Category</a>
        </div>
    </div>
</div>

<form asp-action="Index" method="get">
    <div class="form-actions d-flex align-items-baseline justify-content-between">
        <p>
            Find by name: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-primary" />
        </p>
        <a asp-action="Index">Back to Full List</a>

    </div>
</form>

<table class="table table-bordered w-100">
    <thead>
        <tr class="table-primary">
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["IdSortParm"]" asp-route-searchString="@ViewData["CurrentFilter"]">Id</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-searchString="@ViewData["CurrentFilter"]">Category Name</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["DisplaySortParm"]" asp-route-searchString="@ViewData["CurrentFilter"]">Display Order</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]" asp-route-searchString="@ViewData["CurrentFilter"]">Date Created</a>
            </th>
            <th colspan="2"></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var obj in Model)
        {
            <tr>
                <td>@obj.Id</td>
                <td>@obj.Name</td>
                <td>@obj.DisplayOrder</td>
                <td>@obj.CreatedDateTime</td>
                <td class="d-flex justify-content-evenly">
                    <a asp-controller="Category" asp-action="Edit" asp-route-id="@obj.Id" class="btn btn-warning"><i class="bi bi-pencil-square"></i> &nbsp; Edit Category</a>
                    <!-- Former Delete Button
                    <a asp-controller="Category" asp-action="Delete" asp-route-id="@obj.Id" class="btn btn-danger"><i class="bi bi-trash"></i> &nbsp; Delete Category</a>
                    -->
                    <!-- Button trigger modal -->
                    <button type="button" onclick="addModalInfo" class="btn btn-danger modalButton" data-bs-toggle="modal" data-bs-target="#deleteModal">
                        <i class="bi bi-trash"></i> &nbsp; Delete Category
                    </button>
                </td>
            </tr>
        }
    </tbody>
</table>

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-searchString="@ViewData["CurrentFilter"]"
   class="btn btn-light @prevDisabled">
    Previous
</a>

@for(int i = 1; i < 5; i++)
{
    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@i"
       asp-route-searchString="@ViewData["CurrentFilter"]"
       class="btn @(Model.PageIndex == i ? "btn-primary" : "btn-light")">
        @i
    </a>
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-searchString="@ViewData["CurrentFilter"]"
   class="btn btn-light @nextDisabled">
    Next
</a>

<script>
    document.addEventListener("click", function (e) {

        const target = e.target;
        if (target.classList.contains("modalButton")) {
            let targetRow = target.parentElement.parentElement.cells;
            let cellData = [targetRow[0].innerText, targetRow[1].innerText, targetRow[2].innerText];

            console.log(cellData);

            let form = document.getElementById("modalForm");
            form[0].value = cellData[1];
            form[1].value = cellData[2];

            let deleteButton = document.querySelector(".confirmDelete");
            deleteButton.href = "Category/Delete/" + cellData[0];

            console.log(deleteButton.href);
        }
    })

</script>

<!-- Modal -->
@{
    <partial name="_DeletePartial" />
}

@section Scripts{
    @{
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta3/dist/js/bootstrap.min.js" integrity="sha384-j0CNLUeiqtyaRmlzUHCPZ+Gy5fQu0dQ6eZ/xAww941Ai1SxSY+0EQqNXNE6DZiVc" crossorigin="anonymous"></script>
    }
}